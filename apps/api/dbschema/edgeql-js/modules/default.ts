// GENERATED by @edgedb/generate v0.5.5

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $PetλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Pet = $.ObjectType<"default::Pet", $PetλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Pet = $.makeType<$Pet>(_.spec, "1e3d12d7-630a-11ef-ab07-9531a2453419", _.syntax.literal);

const Pet: $.$expr_PathNode<$.TypeSet<$Pet, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Pet, $.Cardinality.Many), null);



export { $Pet, Pet };

type __defaultExports = {
  "Pet": typeof Pet
};
const __defaultExports: __defaultExports = {
  "Pet": Pet
};
export default __defaultExports;
